<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://genzade.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://genzade.github.io/" rel="alternate" type="text/html" /><updated>2024-04-19T20:13:56+00:00</updated><id>https://genzade.github.io/feed.xml</id><title type="html">Genzade</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">test blog here</title><link href="https://genzade.github.io/2023/12/09/test-blog-here.html" rel="alternate" type="text/html" title="test blog here" /><published>2023-12-09T22:10:00+00:00</published><updated>2023-12-09T22:10:00+00:00</updated><id>https://genzade.github.io/2023/12/09/test-blog-here</id><content type="html" xml:base="https://genzade.github.io/2023/12/09/test-blog-here.html"><![CDATA[<p>Lorem ipsum dolor sit amet, qui minim labore adipisicing minim sint cillum sint consectetur cupidatat.</p>

<h1 id="some-title">Some title</h1>

<p>Lorem ipsum dolor sit amet, officia excepteur ex fugiat reprehenderit enim labore culpa sint ad nisi Lorem pariatur mollit ex esse exercitation amet. Nisi anim cupidatat excepteur officia. Reprehenderit nostrud nostrud ipsum Lorem est aliquip amet voluptate voluptate dolor minim nulla est proident. Nostrud officia pariatur ut officia. Sit irure elit esse ea nulla sunt ex occaecat reprehenderit commodo officia dolor Lorem duis laboris cupidatat officia voluptate. Culpa proident adipisicing id nulla nisi laboris ex in Lorem sunt duis officia eiusmod. Aliqua reprehenderit commodo ex non excepteur duis sunt velit enim. Voluptate laboris sint cupidatat ullamco ut ea consectetur et est culpa et culpa duis.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">attribute</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">tableName</span><span class="p">;</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="misc" /><summary type="html"><![CDATA[Lorem ipsum dolor sit amet, qui minim labore adipisicing minim sint cillum sint consectetur cupidatat.]]></summary></entry><entry><title type="html">Pihole Unbound Docker</title><link href="https://genzade.github.io/2023/11/13/pihole-unbound-docker.html" rel="alternate" type="text/html" title="Pihole Unbound Docker" /><published>2023-11-13T00:00:00+00:00</published><updated>2023-11-13T00:00:00+00:00</updated><id>https://genzade.github.io/2023/11/13/pihole-unbound-docker</id><content type="html" xml:base="https://genzade.github.io/2023/11/13/pihole-unbound-docker.html"><![CDATA[<p>In an era where online privacy and digital security have become paramount, taking
control of your network’s DNS infrastructure is a fundamental step towards fortifying
your defenses. In this guide, we’ll delve into the robust combination of Pi-hole
and Unbound, leveraging the power of Docker containers to enhance your network’s
privacy, security, and overall performance.</p>

<h1 id="introduction">Introduction</h1>

<p>Pi-hole is an open-source network-wide ad blocker, it not only sweeps away intrusive
advertisements but also serves as a potent tool for filtering out malicious content
and tracking. On the other hand, Unbound, a validating, recursive, and caching DNS
resolver, ensures that your DNS queries are resolved securely and free from eavesdropping
or manipulation.</p>

<p>Why Docker containers? Docker provides a lightweight and portable solution for deploying
applications and services, ensuring consistent performance across different environments.
By encapsulating Pi-hole and Unbound in Docker containers, we achieve an isolated
and easily replicable setup, simplifying the installation process and minimizing
potential conflicts.</p>

<p>Even though in the following guide I set this up with a raspberry pi, you can run
this anywhere you like. That’s the beauty of docker containerization.</p>

<h2 id="prerequisites">Prerequisites</h2>

<p>First and foremost you need to <a href="https://projects.raspberrypi.org/en/projects/raspberry-pi-setting-up/2" target="\_blank">setup your raspberry pi</a>.</p>

<p>Once that is setup you will need remote access and <a href="https://www.raspberrypi.com/documentation/computers/remote-access.html" target="\_blank">here is a detailed guide</a>
on how you can achieve this.</p>

<p>Make sure the above steps were done correctly before continuing. Once you have
established a ssh connection to the pi you will need to install docker and docker
compose.</p>

<p>Before coninuing</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>apt-get update
<span class="nv">$ </span><span class="nb">sudo </span>apt-get upgrade
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">docker</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl <span class="nt">-sSL</span> https://get.docker.com | sh
<span class="nv">$ </span><span class="nb">sudo </span>usermod <span class="nt">-aG</span> docker <span class="nv">$USER</span>
</code></pre></div></div>

<p>See <a href="https://raspberrytips.com/docker-on-raspberry-pi/" target="\_blank">this article</a> for detailed
explanation.</p>

<p><code class="language-plaintext highlighter-rouge">docker compose</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>apt-get update
<span class="nv">$ </span><span class="nb">sudo </span>apt-get <span class="nb">install </span>docker-compose-plugin
</code></pre></div></div>

<p>First create a <code class="language-plaintext highlighter-rouge">.env</code> file to substitute variables for your deployment.</p>

<h1 id="pi-hole-environment-variables">Pi-hole environment variables</h1>

<blockquote>
  <p>Vars and descriptions can be viewed in full from the <a href="https://github.com/pi-hole/docker-pi-hole/#environment-variables" target="\_blank">official pihole container</a>:</p>
</blockquote>

<p>Example <code class="language-plaintext highlighter-rouge">.env</code> file in the same directory as your <code class="language-plaintext highlighter-rouge">docker-compose.yaml</code> file:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">FTLCONF_LOCAL_IPV4</span><span class="o">=</span>192.168.1.10
<span class="nv">TZ</span><span class="o">=</span>America/Los_Angeles
<span class="nv">WEBPASSWORD</span><span class="o">=</span>QWERTY123456asdfASDF
<span class="nv">REV_SERVER</span><span class="o">=</span><span class="nb">true
</span><span class="nv">REV_SERVER_DOMAIN</span><span class="o">=</span><span class="nb">local
</span><span class="nv">REV_SERVER_TARGET</span><span class="o">=</span>192.168.1.1
<span class="nv">REV_SERVER_CIDR</span><span class="o">=</span>192.168.0.0/16
<span class="nv">HOSTNAME</span><span class="o">=</span>pihole
<span class="nv">DOMAIN_NAME</span><span class="o">=</span>pihole.local
<span class="nv">PIHOLE_WEBPORT</span><span class="o">=</span>80
<span class="nv">WEBTHEME</span><span class="o">=</span>default-light
</code></pre></div></div>

<p>Copy the example file to a file called <code class="language-plaintext highlighter-rouge">.env</code>, do this with;</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cp</span> .env.sample .env
</code></pre></div></div>

<p>Change the values as nesessary.</p>

<h1 id="run-it">Run it</h1>

<p>You run it with the following command.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>docker compose up <span class="nt">-d</span>
</code></pre></div></div>

<h1 id="test-it">Test it</h1>

<p>From inside your raspberry pi start a bash session in the docker container.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>docker <span class="nb">exec</span> <span class="nt">-it</span> pihole bash
</code></pre></div></div>

<p>And run the following;</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>dig fail01.dnssec.works @127.0.0.1 <span class="nt">-p</span> 5335 <span class="c"># this should fail (no response)</span>
<span class="nv">$ </span>dig dnssec.works @127.0.0.1 <span class="nt">-p</span> 5335        <span class="c"># this should work and return an IP address</span>
</code></pre></div></div>

<p>Read <a href="https://docs.pi-hole.net/guides/dns/unbound/" target="\_blank">this article</a> for a detailed
explanation of what is going on here.</p>

<p>If all is well update your router log into your router’s configuration page and
find the DHCP/DNS settings and set it so that your router is pointing to your
raspberry pi’s IP address. Note: make sure you adjust this setting under your
LAN settings and not the WAN.</p>

<p>Log into the admin dashboard of you pihole in a browser and you should start
seeing queries being blocked.</p>

<h1 id="github-repo">Github repo</h1>

<p>You can check out all the source code for this setup <a href="https://github.com/genzade/pihole_unbound" target="\_blank">here</a>.</p>]]></content><author><name></name></author><category term="docker" /><category term="raspberrypi" /><category term="misc" /><summary type="html"><![CDATA[In an era where online privacy and digital security have become paramount, taking control of your network’s DNS infrastructure is a fundamental step towards fortifying your defenses. In this guide, we’ll delve into the robust combination of Pi-hole and Unbound, leveraging the power of Docker containers to enhance your network’s privacy, security, and overall performance.]]></summary></entry></feed>